<?php
namespace {{ namespace }};

use Sosupp\SlimDashboard\Concerns\Filters\CommonFilters;
use Sosupp\SlimDashboard\Contracts\Crudable;
use Sosupp\SlimDashboard\Concerns\Filters\WithDateFormat;

class {{ class }} implements Crudable
{
    use CommonFilters, WithDateFormat;

    public function make(?int $id, array $data)
    {
        return {{ model }}::query()
        ->updateOrCreate(
            ['id' => $id],
            [
                
            ]
        );
    }

    public function one(int|string $id) 
    { 
        return {{ model }}::query()
        ->where('id', $id)
        ->first();
    }

    public function list(int|null $limit = 12, array $cols = ['*'])
    {
        return {{ model }}::query()
        ->withTrashed()
        ->when(!empty($this->searchTerm), function($q){
            $q->{$this->searchType}($this->searchCol, $this->searchTerm);
        })
        ->dated($this->selectedDate)
        ->orderBy($this->orderByColumn, $this->orderByDirection)
        ->get($cols);
    }

    public function paginate(int|null $limit = 12, array $cols = ['*'])
    {
        return {{ model }}::query()
        ->withTrashed()
        ->when(!empty($this->searchTerm), function($q){
            $q->{$this->searchType}($this->searchCol, $this->searchTerm);
        })
        ->dated($this->selectedDate)
        ->orderBy($this->orderByColumn, $this->orderByDirection)
        ->paginate(perPage: $limit, columns: $cols);
    }

    public function remove(int|string $id) 
    { 

    }

}
